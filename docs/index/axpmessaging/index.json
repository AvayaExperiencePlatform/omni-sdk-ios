{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/pushnotification","title":"Setting up push notification","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/axpmessagingsdk\/addstreamstatechangelistener(listener:)","title":"static func addStreamStateChangeListener(listener: StreamStateChangedListener)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpmessagingsdk\/messageforpushnotificationpayload(notificationpayload:configuration:)","title":"static func messageForPushNotificationPayload(notificationPayload: NotificationPayload, configuration: AXPOmniSDKConfig) async throws -> String","type":"method"},{"path":"\/documentation\/axpmessaging\/axpmessagingsdk\/messageforpushnotificationpayload(notificationpayload:configuration:responsehandler:)","title":"static func messageForPushNotificationPayload(notificationPayload: NotificationPayload, configuration: AXPOmniSDKConfig, responseHandler: (Result<String?, Error>) -> Void)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpmessagingsdk\/removestreamstatechangelistener(listener:)","title":"static func removeStreamStateChangeListener(listener: StreamStateChangedListener)","type":"method"}],"path":"\/documentation\/axpmessaging\/axpmessagingsdk","title":"AXPMessagingSDK","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/attachmentmessage\/init(file:captiontext:)","title":"init(file: URL, captionText: String?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/attachmentmessage\/elementtext","title":"var elementText: ElementText","type":"property"},{"path":"\/documentation\/axpmessaging\/attachmentmessage\/elementtype","title":"var elementType: String","type":"property"},{"path":"\/documentation\/axpmessaging\/attachmentmessage\/richmediapayload","title":"var richMediaPayload: RichMediaPayload?","type":"property"}],"path":"\/documentation\/axpmessaging\/attachmentmessage","title":"AttachmentMessage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/locationmessage\/init(latitude:longitude:address:name:)","title":"init(latitude: Double, longitude: Double, address: String?, name: String?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/locationmessage\/elementtext","title":"var elementText: ElementText","type":"property"},{"path":"\/documentation\/axpmessaging\/locationmessage\/elementtype","title":"var elementType: String","type":"property"},{"path":"\/documentation\/axpmessaging\/locationmessage\/richmediapayload","title":"var richMediaPayload: RichMediaPayload?","type":"property"}],"path":"\/documentation\/axpmessaging\/locationmessage","title":"LocationMessage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/postbackmessage\/init(text:payload:)","title":"init(text: String, payload: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/postbackmessage\/elementtext","title":"var elementText: ElementText","type":"property"},{"path":"\/documentation\/axpmessaging\/postbackmessage\/elementtype","title":"var elementType: String","type":"property"},{"path":"\/documentation\/axpmessaging\/postbackmessage\/richmediapayload","title":"var richMediaPayload: RichMediaPayload?","type":"property"}],"path":"\/documentation\/axpmessaging\/postbackmessage","title":"PostbackMessage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/replymessage\/init(text:payload:iconurl:)","title":"init(text: String, payload: String, iconURL: URL?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/replymessage\/elementtext","title":"var elementText: ElementText","type":"property"},{"path":"\/documentation\/axpmessaging\/replymessage\/elementtype","title":"var elementType: String","type":"property"},{"path":"\/documentation\/axpmessaging\/replymessage\/richmediapayload","title":"var richMediaPayload: RichMediaPayload?","type":"property"}],"path":"\/documentation\/axpmessaging\/replymessage","title":"ReplyMessage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/textmessage\/init(text:)","title":"init(text: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/textmessage\/elementtext","title":"var elementText: ElementText","type":"property"},{"path":"\/documentation\/axpmessaging\/textmessage\/elementtype","title":"var elementType: String","type":"property"},{"path":"\/documentation\/axpmessaging\/textmessage\/richmediapayload","title":"var richMediaPayload: RichMediaPayload?","type":"property"}],"path":"\/documentation\/axpmessaging\/textmessage","title":"TextMessage","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/messagebody\/elementtext","title":"var elementText: ElementText","type":"property"},{"path":"\/documentation\/axpmessaging\/messagebody\/elementtype","title":"var elementType: String","type":"property"},{"path":"\/documentation\/axpmessaging\/messagebody\/richmediapayload","title":"var richMediaPayload: RichMediaPayload?","type":"property"}],"path":"\/documentation\/axpmessaging\/messagebody","title":"MessageBody","type":"protocol"},{"path":"\/documentation\/axpmessaging\/messagesiter","title":"MessagesIter","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/action\/init(type:text:payload:uri:iconurl:)","title":"init(type: String, text: String?, payload: String?, uri: URL?, iconURL: URL?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/action\/iconurl","title":"let iconURL: URL?","type":"property"},{"path":"\/documentation\/axpmessaging\/action\/payload","title":"let payload: String?","type":"property"},{"path":"\/documentation\/axpmessaging\/action\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/axpmessaging\/action\/type","title":"let type: String","type":"property"},{"path":"\/documentation\/axpmessaging\/action\/uri","title":"let uri: URL?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/action\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/action\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/action","title":"Action","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/attachment\/init(name:propertysize:contenttype:url:attachmentid:contentid:captiontext:thumbnailurl:additionalproperties:)","title":"init(name: String, propertySize: Int64, contentType: String, url: URL, attachmentId: String, contentId: String?, captionText: String?, thumbnailURL: URL?, additionalProperties: [String : String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/attachment\/additionalproperties","title":"let additionalProperties: [String : String]?","type":"property"},{"path":"\/documentation\/axpmessaging\/attachment\/attachmentid","title":"let attachmentId: String","type":"property"},{"path":"\/documentation\/axpmessaging\/attachment\/captiontext","title":"let captionText: String?","type":"property"},{"path":"\/documentation\/axpmessaging\/attachment\/contentid","title":"let contentId: String?","type":"property"},{"path":"\/documentation\/axpmessaging\/attachment\/contenttype","title":"let contentType: String","type":"property"},{"path":"\/documentation\/axpmessaging\/attachment\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/axpmessaging\/attachment\/propertysize","title":"let propertySize: Int64","type":"property"},{"path":"\/documentation\/axpmessaging\/attachment\/thumbnailurl","title":"let thumbnailURL: URL?","type":"property"},{"path":"\/documentation\/axpmessaging\/attachment\/url","title":"let url: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/attachment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/attachment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/attachment","title":"Attachment","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/attachmentmessagebody\/elementtext","title":"let elementText: ElementText","type":"property"},{"path":"\/documentation\/axpmessaging\/attachmentmessagebody\/elementtype","title":"let elementType: String","type":"property"},{"path":"\/documentation\/axpmessaging\/attachmentmessagebody\/file","title":"let file: URL","type":"property"},{"path":"\/documentation\/axpmessaging\/attachmentmessagebody\/richmediapayload","title":"var richMediaPayload: RichMediaPayload?","type":"property"},{"path":"\/documentation\/axpmessaging\/attachmentmessagebody\/uploadedattachment","title":"let uploadedAttachment: UploadedAttachment","type":"property"}],"path":"\/documentation\/axpmessaging\/attachmentmessagebody","title":"AttachmentMessageBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/body\/init(elementtype:elementtext:richmediapayload:)","title":"init(elementType: String, elementText: ElementText, richMediaPayload: RichMediaPayload?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/body\/elementtext","title":"let elementText: ElementText","type":"property"},{"path":"\/documentation\/axpmessaging\/body\/elementtype","title":"let elementType: String","type":"property"},{"path":"\/documentation\/axpmessaging\/body\/richmediapayload","title":"let richMediaPayload: RichMediaPayload?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/body\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/body\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/body","title":"Body","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/elementtext\/init(text:textformat:)","title":"init(text: String, textFormat: TextFormat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/elementtext\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/axpmessaging\/elementtext\/textformat","title":"let textFormat: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/elementtext\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/elementtext\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/elementtext","title":"ElementText","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/item\/init(title:actions:mediaurl:description:)","title":"init(title: String, actions: [Action], mediaURL: URL?, description: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/item\/actions","title":"let actions: [Action]","type":"property"},{"path":"\/documentation\/axpmessaging\/item\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/axpmessaging\/item\/mediaurl","title":"let mediaURL: URL?","type":"property"},{"path":"\/documentation\/axpmessaging\/item\/title","title":"let title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/item\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/item\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/item","title":"Item","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/locationcoordinates\/init(latitude:longitude:)","title":"init(latitude: Double, longitude: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/locationcoordinates\/latitude","title":"let latitude: Double","type":"property"},{"path":"\/documentation\/axpmessaging\/locationcoordinates\/longitude","title":"let longitude: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/locationcoordinates\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/locationcoordinates\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/locationcoordinates","title":"LocationCoordinates","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/locationdetails\/init(address:name:)","title":"init(address: String?, name: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/locationdetails\/address","title":"let address: String?","type":"property"},{"path":"\/documentation\/axpmessaging\/locationdetails\/name","title":"let name: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/locationdetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/locationdetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/locationdetails","title":"LocationDetails","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/message\/==(_:_:)","title":"static func == (Message, Message) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/message\/init(id:sender:body:messageid:conversationid:parentmessageid:displayname:receivedat:lastupdatedat:attachments:)","title":"init(id: UUID?, sender: Participant, body: Body, messageId: String, conversationId: String?, parentMessageId: String?, displayName: String, receivedAt: Date?, lastUpdatedAt: Date?, attachments: [Attachment])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/message\/attachments","title":"var attachments: [Attachment]","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/body","title":"let body: Body","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/conversationid","title":"var conversationID: String?","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/lastupdatedat","title":"var lastUpdatedAt: Date?","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/messageid","title":"let messageID: String","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/parentmessageid","title":"var parentMessageID: String?","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/receivedat","title":"var receivedAt: Date?","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/sender","title":"let sender: Participant","type":"property"},{"path":"\/documentation\/axpmessaging\/message\/urls","title":"var urls: [URLRange]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/message\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/message\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/message","title":"Message","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/messagechangedlistener\/==(_:_:)","title":"static func == (MessageChangedListener, MessageChangedListener) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/messagechangedlistener\/init(_:)","title":"init((Message) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/messagechangedlistener\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/messagechangedlistener\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/messagechangedlistener\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/messagechangedlistener","title":"MessageChangedListener","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/messagingstreamstate\/init(state:reason:)","title":"init(state: EventState, reason: EventStreamFailureReason?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/messagingstreamstate\/reason","title":"let reason: EventStreamFailureReason?","type":"property"},{"path":"\/documentation\/axpmessaging\/messagingstreamstate\/state","title":"let state: EventState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/messagingstreamstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/messagingstreamstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/messagingstreamstate","title":"MessagingStreamState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/notificationpayload\/init(eventdate:eventid:conversationid:sessionid:)","title":"init(eventDate: Date, eventId: String, conversationId: String, sessionId: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/notificationpayload\/conversationid","title":"let conversationId: String","type":"property"},{"path":"\/documentation\/axpmessaging\/notificationpayload\/eventdate","title":"let eventDate: Date","type":"property"},{"path":"\/documentation\/axpmessaging\/notificationpayload\/eventid","title":"let eventId: String","type":"property"},{"path":"\/documentation\/axpmessaging\/notificationpayload\/sessionid","title":"let sessionId: String","type":"property"}],"path":"\/documentation\/axpmessaging\/notificationpayload","title":"NotificationPayload","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/notificationresult\/eventdate","title":"let eventDate: Date?","type":"property"},{"path":"\/documentation\/axpmessaging\/notificationresult\/message","title":"let message: Message?","type":"property"},{"path":"\/documentation\/axpmessaging\/notificationresult\/participant","title":"let participant: Participant?","type":"property"},{"path":"\/documentation\/axpmessaging\/notificationresult\/type","title":"let type: NotificationType","type":"property"}],"path":"\/documentation\/axpmessaging\/notificationresult","title":"NotificationResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/richmediapayload\/init(mediaurl:selectedaction:coordinates:location:attachmentids:actions:items:)","title":"init(mediaURL: String?, selectedAction: Action?, coordinates: LocationCoordinates?, location: LocationDetails?, attachmentIds: [String]?, actions: [Action]?, items: [Item]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/richmediapayload\/actions","title":"let actions: [Action]?","type":"property"},{"path":"\/documentation\/axpmessaging\/richmediapayload\/attachmentids","title":"let attachmentIds: [String]?","type":"property"},{"path":"\/documentation\/axpmessaging\/richmediapayload\/coordinates","title":"let coordinates: LocationCoordinates?","type":"property"},{"path":"\/documentation\/axpmessaging\/richmediapayload\/items","title":"let items: [Item]?","type":"property"},{"path":"\/documentation\/axpmessaging\/richmediapayload\/location","title":"let location: LocationDetails?","type":"property"},{"path":"\/documentation\/axpmessaging\/richmediapayload\/mediaurl","title":"let mediaURL: String?","type":"property"},{"path":"\/documentation\/axpmessaging\/richmediapayload\/selectedaction","title":"let selectedAction: Action?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/richmediapayload\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/richmediapayload\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/richmediapayload","title":"RichMediaPayload","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/streamstatechangedlistener\/==(_:_:)","title":"static func == (StreamStateChangedListener, StreamStateChangedListener) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/streamstatechangedlistener\/init(_:)","title":"init((MessagingStreamState) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/streamstatechangedlistener\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/streamstatechangedlistener\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/streamstatechangedlistener\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/streamstatechangedlistener","title":"StreamStateChangedListener","type":"struct"},{"path":"\/documentation\/axpmessaging\/typingindicatorjob","title":"TypingIndicatorJob","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/typinglistener\/==(_:_:)","title":"static func == (TypingListener, TypingListener) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/typinglistener\/init(_:)","title":"init((T) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/typinglistener\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/typinglistener\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/typinglistener\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/typinglistener","title":"TypingListener","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/urlrange\/range","title":"var range: NSRange","type":"property"},{"path":"\/documentation\/axpmessaging\/urlrange\/url","title":"var url: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/urlrange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/urlrange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/urlrange","title":"URLRange","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/uploadedattachment\/init(attachmentid:name:type:size:)","title":"init(attachmentId: String, name: String, type: String, size: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/uploadedattachment\/attachmentid","title":"let attachmentId: String","type":"property"},{"path":"\/documentation\/axpmessaging\/uploadedattachment\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/axpmessaging\/uploadedattachment\/size","title":"let size: Int64","type":"property"},{"path":"\/documentation\/axpmessaging\/uploadedattachment\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/axpmessaging\/uploadedattachment","title":"UploadedAttachment","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/typingstartedlistener","title":"TypingStartedListener","type":"typealias"},{"path":"\/documentation\/axpmessaging\/typingstoppedlistener","title":"TypingStoppedListener","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/elementtype\/carousel","title":"case carousel","type":"case"},{"path":"\/documentation\/axpmessaging\/elementtype\/file","title":"case file","type":"case"},{"path":"\/documentation\/axpmessaging\/elementtype\/image","title":"case image","type":"case"},{"path":"\/documentation\/axpmessaging\/elementtype\/location","title":"case location","type":"case"},{"path":"\/documentation\/axpmessaging\/elementtype\/postback","title":"case postback","type":"case"},{"path":"\/documentation\/axpmessaging\/elementtype\/reply","title":"case reply","type":"case"},{"path":"\/documentation\/axpmessaging\/elementtype\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/elementtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/elementtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/elementtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/elementtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/elementtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/axpmessaging\/elementtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/axpmessaging\/elementtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/elementtype","title":"ElementType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/eventstate\/closed","title":"case closed","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstate\/connected","title":"case connected","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstate\/connecting","title":"case connecting","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstate\/deviceconnectionfailed","title":"case deviceConnectionFailed","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstate\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstate\/paused","title":"case paused","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstate\/retry","title":"case retry","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/eventstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/eventstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/eventstate","title":"EventState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/clientsessioninvalidated","title":"case clientSessionInvalidated","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/connectionfailed","title":"case connectionFailed","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/forbidden","title":"case forbidden","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/reconnectiontimeout","title":"case reconnectionTimeout","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/servererror","title":"case serverError","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/serverunreachable","title":"case serverUnreachable","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/unauthorized","title":"case unauthorized","type":"case"},{"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/unexpectederror","title":"case unexpectedError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/eventstreamfailurereason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/eventstreamfailurereason","title":"EventStreamFailureReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/fileerror\/doesnotexist","title":"case doesNotExist","type":"case"},{"path":"\/documentation\/axpmessaging\/fileerror\/invalidname","title":"case invalidName","type":"case"},{"path":"\/documentation\/axpmessaging\/fileerror\/invalidsize","title":"case invalidSize","type":"case"},{"path":"\/documentation\/axpmessaging\/fileerror\/sizeexceedslimit","title":"case sizeExceedsLimit","type":"case"},{"path":"\/documentation\/axpmessaging\/fileerror\/unsupportedextension","title":"case unsupportedExtension","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/fileerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/fileerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/fileerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/axpmessaging\/fileerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/fileerror","title":"FileError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/notificationtype\/messagearrived","title":"case messageArrived","type":"case"},{"path":"\/documentation\/axpmessaging\/notificationtype\/participantadded","title":"case participantAdded","type":"case"},{"path":"\/documentation\/axpmessaging\/notificationtype\/participantremoved","title":"case participantRemoved","type":"case"},{"path":"\/documentation\/axpmessaging\/notificationtype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/notificationtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/notificationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/notificationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/notificationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/notificationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/axpmessaging\/notificationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/notificationtype","title":"NotificationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/textformat\/html","title":"case html","type":"case"},{"path":"\/documentation\/axpmessaging\/textformat\/markdown","title":"case markDown","type":"case"},{"path":"\/documentation\/axpmessaging\/textformat\/plaintext","title":"case plainText","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/textformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/textformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/axpmessaging\/textformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/textformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/textformat\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/axpmessaging\/textformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/axpmessaging\/textformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/axpmessaging\/textformat","title":"TextFormat","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/addmessagearrivedlistener(listener:)","title":"func addMessageArrivedListener(listener: MessageChangedListener)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/addmessagedeliveredlistener(listener:)","title":"func addMessageDeliveredListener(listener: MessageChangedListener)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/addtypingstartedlistener(listener:)","title":"func addTypingStartedListener(listener: TypingStartedListener)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/addtypingstoppedlistener(listener:)","title":"func addTypingStoppedListener(listener: TypingStoppedListener)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/clearall()","title":"func clearAll() throws","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/getmessages(pagesize:)","title":"func getMessages(pageSize: Int) async throws -> (any MessagesIter)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/getmessages(pagesize:completion:)","title":"func getMessages(pageSize: Int, completion: AXPChatResultHandler<any MessagesIter>) async","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/notifyusertyping()","title":"func notifyUserTyping()","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/removemessagearrivedlistener(listener:)","title":"func removeMessageArrivedListener(listener: MessageChangedListener)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/removemessagedeliveredlistener(listener:)","title":"func removeMessageDeliveredListener(listener: MessageChangedListener)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/removetypingstartedlistener(listener:)","title":"func removeTypingStartedListener(listener: TypingStartedListener)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/removetypingstoppedlistener(listener:)","title":"func removeTypingStoppedListener(listener: TypingStoppedListener)","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/sendmessage(messagebody:parentmessageid:)","title":"func sendMessage(messageBody: MessageBody, parentMessageId: MessageID?) async throws -> Message","type":"method"},{"path":"\/documentation\/axpmessaging\/axpcore\/conversation\/sendmessage(messagebody:parentmessageid:completion:)","title":"func sendMessage(messageBody: MessageBody, parentMessageId: MessageID?, completion: AXPChatResultHandler<Message>)","type":"method"}],"path":"\/documentation\/axpmessaging\/axpcore\/conversation","title":"Conversation","type":"extension"}],"path":"\/documentation\/axpmessaging\/axpcore","title":"AXPCore","type":"extension"}],"path":"\/documentation\/axpmessaging","title":"AXPMessaging","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}